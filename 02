import numpy as np
import matplotlib.pyplot as plt

def dijkstra(grafo, origen, destino):
    nodos_abiertos = set([origen])
    nodos_cerrados = set()
    costos = {origen: 0}

    while nodos_abiertos:
        nodo_actual = min(nodos_abiertos, key=lambda nodo: costos[nodo])

        if nodo_actual == destino:
            return reconstruir_camino(costos, origen, destino)

        for vecino, costo_vecino in grafo[nodo_actual]:
            if vecino not in nodos_cerrados:
                costo_actual = costos[nodo_actual] + round(np.sqrt(((vecino[0] - nodo_actual[0])**2) + ((vecino[1] - nodo_actual[1])**2)))
                if costo_actual < costos.get(vecino, float("inf")):
                    costos[vecino] = costo_actual
                    nodos_abiertos.add(vecino)

        nodos_abiertos.remove(nodo_actual)
        nodos_cerrados.add(nodo_actual)

    return None

def reconstruir_camino(costos, origen, destino):
    camino = [destino]
    nodo_actual = destino

    while nodo_actual != origen:
        nodo_actual = costos.get(nodo_actual, None)
        if nodo_actual is None:
            return None

        camino.append(nodo_actual)

    return camino[::-1]

if __name__ == "__main__":
    graph = [
        [(1, 1), (2, 1), (3, 1), (4, 1), (5, 1)],
        [(0, 1), (2, 1), (3, 1), (4, 1), (5, 0)],
        [(0, 1), (1, 1), (3, 1), (4, 1), (5, 1)],
        [(0, 1), (1, 1), (2, 1), (4, 1), (5, 1)],
        [(0, 1), (2, 1), (3, 1), (5, 0)],
        [(0, 1), (1, 0), (2, 1), (3, 1), (4, 0)]
    ]

    camino = dijkstra(graph, 0, 4)

    print(camino)
